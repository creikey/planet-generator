[gd_resource type="ShaderMaterial" load_steps=4 format=2]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

uniform vec2 uv_offset = vec2(0.0);
uniform vec2 uv_scale = vec2(1.0);

uniform bool use_custom_image = false;
uniform sampler2D custom_image;

uniform vec4 grass_color : hint_color;
uniform vec4 shore_color : hint_color;
uniform vec4 ocean_color : hint_color;
uniform sampler2D grass;
uniform float grass_threshold = 0.5;
uniform float shore_threshold = 0.4;

void vertex() {
	UV=UV*uv_scale + uv_offset*uv_scale*0.5;
}




void fragment() {
	if(use_custom_image) {
		vec4 image_data = texture(custom_image, UV);
		COLOR = vec4(image_data.rgb, 1.0);
	} else {
		float has_grass = step(grass_threshold, texture(grass, UV).r);
		float has_shore = step(shore_threshold, texture(grass, UV).r);
		
		vec4 col = mix(ocean_color, shore_color, has_shore);
		col = mix(col, grass_color, has_grass);
		
		COLOR = vec4(col.rgb, 1.0);
	}
}
"

[sub_resource type="OpenSimplexNoise" id=2]
seed = 2551

[sub_resource type="NoiseTexture" id=3]
seamless = true
noise = SubResource( 2 )

[resource]
shader = SubResource( 1 )
shader_param/uv_offset = Vector2( 0, 0 )
shader_param/uv_scale = Vector2( 1, 1 )
shader_param/use_custom_image = false
shader_param/grass_color = Color( 0.176471, 0.501961, 0.439216, 1 )
shader_param/shore_color = Color( 0.215686, 0.580392, 0.431373, 1 )
shader_param/ocean_color = Color( 0.478431, 0.635294, 0.807843, 1 )
shader_param/grass_threshold = 0.562
shader_param/shore_threshold = 0.513
shader_param/grass = SubResource( 3 )
